plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.runningRank'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// 🔥 반드시 맨 위에 선언해야 아래에 적용돼!
	implementation platform('software.amazon.awssdk:bom:2.25.14')

	// 프로메테우스 로그
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// 캐싱
	// Spring Boot Cache Starter
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// Caffeine Cache Implementation
	implementation 'com.github.ben-manes.caffeine:caffeine'
	// aws sqs 의존성
	implementation("software.amazon.awssdk:sqs")
	implementation("software.amazon.awssdk:regions")
	implementation("software.amazon.awssdk:auth")

	// jdbc
	implementation 'mysql:mysql-connector-java:8.0.33' // 최신 버전을 확인하고 사용하세요.
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'


	// AWS SDK
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:lambda'

	// 일반 Spring 의존성들
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// 이메일, Swagger, JWT, Lombok 등등 나머지 의존성들 ...
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
